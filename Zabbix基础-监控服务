使用命令查看计算机状态数据
  traceroute            //路由跟踪
  iostat                //读写数据状态
  
 查看内存与交换分区信息
    [root@proxy ~]# free                                     //查看内存信息
                  total        used        free      shared  buff/cache   available
    Mem:       16166888     8017696      720016      106504     7429176     7731740
    Swap:       4194300      218268     3976032
    [root@proxy ~]# free | awk '/Mem/{print $4}'                //查看剩余内存容量
    720928
    
    [root@proxy ~]# swapon -s                                //查看交换分区信息
    文件名                类型            大小        已用        权限
    /dev/sda3             partition        4194300    218268    -1
    
 查看磁盘信息
    [root@proxy ~]# df                                     //查看所有磁盘的使用率
    文件系统           1K-块      已用      可用         已用% 挂载点
    /dev/sda2      476254208 116879624 335159084   26%         /
    /dev/sda1         198174    133897     49737   73%         /boot
    [root@proxy ~]# df | awk '/\/$/{print $5}'            //查看根分区的利用率
    
 查看CPU平均负载
    [root@proxy ~]# uptime                             //查看CPU负载（1，5，15分钟）
     23:54:12 up 38 days, 14:54,  9 users,  load average: 0.00, 0.04, 0.05
    [root@proxy ~]# uptime |awk '{print $NF}'            //仅查看CPU的15分钟平均负载
    0.05
 
 查看网卡信息
    [root@proxy ~]# ifconfig eth0
    eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
            inet 192.168.4.5  netmask 255.255.255.0  broadcast 172.25.0.255
            inet6 fe80::5054:ff:fe00:b  prefixlen 64  scopeid 0x20<link>
            ether 52:54:00:00:00:0b  txqueuelen 1000  (Ethernet)
            RX packets 62429  bytes 10612049 (10.1 MiB)
            RX errors 0  dropped 0  overruns 0  frame 0
            TX packets 5674  bytes 4121143 (3.9 MiB)
            TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
    [root@proxy ~]# ifconfig eth0 |awk '/inet /{print $2}'        //查看IP地址信息
    192.168.4.5
    [root@proxy ~]# ifconfig eth0 |awk '/RX p/{print $5}'        //网卡接受数据包流量
    10625295
    [root@proxy ~]# ifconfig eth0 |awk '/TX p/{print $5}'        //网卡发送数据包流量
    4130821
    
 查看端口信息
    [root@proxy ~]# ss -ntulp                                //查看本机监听的所有端口
    //-n以数字显示端口号
    //-t显示tcp连接
    //-u显示udp连接
    //-p显示监听端口对应的程序名称
    
 查看网络连接信息
    [root@proxy ~]# ss -antup                                //查看所有的网络连接信息
    //-a查看所有连接状态信息
    
部署Zabbix监控平台  
  a)安装LNMP环境
    主机名:zabbixserver   IP:eth1 192.168.2.5
    主机名:zabbixclient_web1 IP:eth1 192.168.2.100  
    主机名:zabbixclient_web2 IP:eth1 192.168.2.200
    
    zabbixserver 需要开启Nginx的各种fastcgi缓存，加速PHP脚本的执行速度
    [root@zabbixserver ~]# vim /usr/local/nginx/conf/nginx.conf
    … …
    http{
    … …
        fastcgi_buffers 8 16k;                      //缓存php生成的页面内容，8个16k
        fastcgi_buffer_size 32k;                      //缓存php生产的头部信息
        fastcgi_connect_timeout 300;                 //连接PHP的超时时间
        fastcgi_send_timeout 300;                     //发送请求的超时时间
        fastcgi_read_timeout 300;                        //读取请求的超时时间
    location ~ \.php$ {
                    root           html;
                    fastcgi_pass   127.0.0.1:9000;
                    fastcgi_index  index.php;
                    include        fastcgi.conf;
            }
    … …
    
  b)源码安装Zabbix
    源码编译前需要先安装相关依赖包
    [root@zabbixserver lnmp_soft]# yum -y install  net-snmp-devel //简单网络管理协议  \
    > curl-devel  //curl 支持zabbix
    //安装相关依赖包
    [root@zabbixserver lnmp_soft]# yum -y install  \
    > libevent-devel-2.0.21-4.el7.x86_64.rpm
    //注意libevent-devel这个软件包在lnmp_soft目录下有提供
    [root@zabbixserver lnmp_soft]# tar -xf zabbix-3.4.4.tar.gz
    [root@zabbixserver lnmp_soft]# cd zabbix-3.4.4/
    [root@zabbixserver zabbix-3.4.4]# ./configure  --enable-server \
    > --enable-proxy --enable-agent --with-mysql=/usr/bin/mysql_config \
    > --with-net-snmp --with-libcurl
    // --enable-server安装部署zabbix服务器端软件
    // --enable-agent安装部署zabbix被监控端软件
    // --enable-proxy安装部署zabbix代理相关软件
    // --with-mysql配置mysql_config路径
    // --with-net-snmp允许zabbix通过snmp协议监控其他设备
    // --with-libcurl安装相关curl库文件，这样zabbix就可以通过curl连接http等服务，测试被监控主机服务的状态
    [root@zabbixserver zabbix-3.4.4]# make && make install
    
    初始化Zabbix                      
    创建数据库
    [root@zabbixserver ~]# mysql
    mysql> create database zabbix character set utf8;
    //创建数据库，支持中文字符集
    mysql> grant all on zabbix.* to zabbix@'localhost' identified by 'zabbix';
    //创建可以访问数据库的账户与密码
    [root@zabbixserver ~]# cd lnmp_soft/zabbix-3.4.4/database/mysql/
    [root@zabbixserver mysql]# mysql -uzabbix -pzabbix zabbix < schema.sql
    [root@zabbixserver mysql]# mysql -uzabbix -pzabbix zabbix < images.sql
    [root@zabbixserver mysql]# mysql -uzabbix -pzabbix zabbix < data.sql
    //刚刚创建是空数据库，zabbix源码包目录下，有提前准备好的数据
    //使用mysql导入这些数据即可（注意导入顺序）
    
    上线Zabbix的Web页面
    [root@zabbixserver ~]# cd lnmp_soft/zabbix-3.4.4/frontends/php/
    [root@zabbixserver php]# cp -r * /usr/local/nginx/html/
    [root@zabbixserver php]# chmod -R 777 /usr/local/nginx/html/*
    
    修改Zabbix_server配置文件，设置数据库相关参数，启动Zabbix_server服务
    [root@zabbixserver ~]# vim /usr/local/etc/zabbix_server.conf
    DBHost=localhost
    //数据库主机，默认该行被注释
    DBName=zabbix
    //设置数据库名称
    DBUser=zabbix
    //设置数据库账户
    DBPassword=zabbix
    //设置数据库密码，默认该行被注释
    LogFile=/tmp/zabbix_server.log    
    //设置日志，仅查看以下即可
    [root@zabbixserver ~]# useradd -s /sbin/nologin zabbix
    //不创建用户无法启动服务
    [root@zabbixserver ~]# zabbix_server                      //启动服务
    // 安装过程中指定路径安装 --perfix=   可以用脚本实现启动程序
       [root@zabbixServer sbin]# cd /root/Zabbix/zabbix-3.4.4/misc/init.d/fedora/core/
       [root@zabbixServer core]# ls
        zabbix_agentd  zabbix_server
       [root@zabbixServer core]# cp zabbix_server /etc/init.d/
       [root@zabbixServer core]# chmod +x /etc/init.d/zabbix_server 
       [root@zabbixServer core]# sed '22s;/usr/local;prefix指定的安装路径;' /etc/init.d/zabbix_server
       脚本实现功能{start|stop|status|restart|help}
    
    [root@zabbixserver ~]# ss -ntulp |grep zabbix_server     //确认连接状态，端口10051
    tcp LISTEN 0 128 *:10051 *:* users:(("zabbix_server",pid=23275,fd=4),("zabbix_server",pid=23274,fd=4)
        //如果是因为配置文件不对，导致服务无法启动时，不要重复执行zabbix_server，
        //一定要先使用killall zabbix_server关闭服务后，再重新启动一次。
    
  c)安装监控端主机，修改基本配置
    修改Zabbix_agent配置文件，启动Zabbix_agent服务
    [root@zabbixserver ~]# vim /usr/local/etc/zabbix_agentd.conf
    Server=127.0.0.1,192.168.2.5                    //允许哪些主机监控本机
    ServerActive=127.0.0.1,192.168.2.5                //允许哪些主机通过主动模式监控本机
    Hostname=zabbix_client_web1                        //设置本机主机名
    LogFile=/tmp/zabbix_server.log                    //设置日志文件
    UnsafeUserParameters=1                        //是否允许自定义key
    EnableRemoteCommands=1                              //监控异常时是否允许服务器远程来执行命令
    [root@zabbixserver ~]# zabbix_agentd            //启动监控agent
    [root@zabbixserver ~]# ss -ntulp |grep zabbix_agentd   //查看端口信息为10050
    tcp    LISTEN     0      128       *:10050                 *:*                   
    users:(("zabbix_agentd",pid=23505,fd=4),("zabbix_agentd",pid=23504,fd=4)
          //如果是因为配置文件不对，导致服务无法启动时，不要重复执行zabbix_agentd，
          //一定要先使用killall zabbix_agentd关闭服务后，再重新启动一次
   
  d)初始化Zabbix监控Web页面
    浏览器访问Zabbix_server服务器的Web页面
    [root@zabbixserver ~]# firefox http://192.168.2.5/index.php
        //第一次访问，初始化PHP页面会检查计算机环境是否满足要求，如果不满足会给出修改建议
        //默认会提示PHP的配置不满足环境要求，需要修改PHP配置文件
    
  e)修改PHP配置文件，满足Zabbix需求
    根据错误提示，修改PHP配置文件，满足Zabbix_server的Web环境要求
    php-bcmath和php-mbstring都在lnmp_soft目录下有提供软件包。
    [root@zabbixserver ~]# yum -y install  php-gd php-xml
    [root@zabbixserver ~]# yum install php-bcmath-5.4.16-42.el7.x86_64.rpm  
    [root@zabbixserver ~]# yum install php-mbstring-5.4.16-42.el7.x86_64.rpm
    [root@zabbixserver ~]# vim /etc/php.ini
    date.timezone = Asia/Shanghai                //设置时区
    max_execution_time = 300                    //最大执行时间，秒
    post_max_size = 32M                        //POST数据最大容量
    max_input_time = 300                        //服务器接收数据的时间限制
    memory_limit = 128M                        //内存容量限制
    [root@zabbixserver ~]# systemctl restart php-fpm
  
  f)安装被监控端主机，修改基本配置
    源码安装Zabbix agent软件 在2.100和2.200做相同操作（以zabbixclient_web1为例）
    [root@zabbixclient_web1 ~]# useradd -s /sbin/nologin  zabbix
    [root@zabbixclient_web1 ~]# yum -y install gcc pcre-devel
    [root@zabbixclient_web1 ~]# tar -xf zabbix-3.4.4.tar.gz 
    [root@zabbixclient_web1 ~]# cd zabbix-3.4.4/
    [root@zabbixclient_web1 zabbix-3.4.4]# ./configure --enable-agent
    [root@zabbixclient_web1 zabbix-3.4.4]# make && make install 
    
    修改agent配置文件，启动Agent
    [root@zabbixclient_web1 ~]# vim /usr/local/etc/zabbix_agentd.conf
    Server=127.0.0.1,192.168.2.5                //谁可以监控本机（被动监控模式）
    ServerActive=127.0.0.1,192.168.2.5            //谁可以监控本机（主动监控模式）
    Hostname=zabbixclient_web1                    //被监控端自己的主机名
    EnableRemoteCommands=1    
    //监控异常后，是否允许服务器远程过来执行命令，如重启某个服务
    UnsafeUserParameters=1                                 //是否允许自定义key监控
    [root@zabbixclient_web1 ~]# zabbix_agentd                //启动agent服务
    
    拷贝启动脚本（非必须操作，可选做），有启动脚本可以方便管理服务，启动与关闭服务。启动脚本位于zabbix源码目录下
    [root@zabbixclient_web1 zabbix-3.4.4]# cd misc/init.d/fedora/core
    [root@zabbixclient_web1 zabbix-3.4.4]# cp zabbix_agentd /etc/init.d/
    [root@zabbixclient_web1 zabbix-3.4.4]# /etc/init.d/zabbix_agentd start
    [root@zabbixclient_web1 zabbix-3.4.4]# /etc/init.d/zabbix_agentd stop
    [root@zabbixclient_web1 zabbix-3.4.4]# /etc/init.d/zabbix_agentd status
    [root@zabbixclient_web1 zabbix-3.4.4]# /etc/init.d/zabbix_agentd restart
    
配置及使用Zabbix监控系统
    添加监控主机
      通过configuration->host->creathost  // 配置-主机-创建主机 
      根据提示输入
        hostname
        visiblename
        groups in groups
        IPaddress
        其他默认
        
    选择监控模版
      templates 选项卡
      link new templates , select选择添加模版
      
    查看监控数据
      monitoring-> last data  //监测中->最新数据
      过滤器中选择条件
      找到需要的数据点击graph  //点击后面的图形
   
客户端自定义监控
  客户端配置
    启动自定义监控项
    [root@zabbixclient_web1 ~]# vim /usr/local/etc/zabbix_agentd.conf
    265 Include=/usr/local/etc/zabbix_agentd.conf.d/*.conf
    280 UnsafeUserParameters=1                                 //是否允许自定义key监控
    
    定义监控命令
    [root@zabbixclient_web1 ~]# vim /usr/local/etc/zabbix_agentd.conf.d/x.conf
    UserParameter=<key>,<shell command>
                  get_sum_user,wc -l /etc/passwd | awk 'pritny $1'
    重启zabbix-agentd服务
       /etc/init.d/zabbix_agentd restart
       
    测试定义监控命令
      useradd yy100
      /usr/local/zabbix/bin/zabbix_get -s 127.0.0.1 -p 10050 -k get_sum_user     //主机 端口 调用命令
      
  监控服务器
    测试客户端定义监控命令
    [root@zabbixServer ~]# zabbix_get -s 192.168.2.100 -p 10050 -k get_sum_users
    
    创建模版--创建应用集--创建监控项
                         key值 填写自定义key值
指定监控命令--调用新创建监控模版--查看监控信息
