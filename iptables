安装iptables-services并启动服务
    [root@proxy ~]# yum -y install iptables-services
    [root@proxy ~]# systemctl start iptables.service

熟悉iptables框架
    1)iptables的4个表（区分大小写）：
        iptables默认有4个表，nat表（地址转换表）、filter[过滤器]表（数据过滤表）、raw表（状态跟踪表）、mangle表（包标记表）。

    2)iptables的5个链（区分大小写）：
        INPUT链（入站规则）
        OUTPUT链（出站规则）
        FORWARD链（转发规则）
        PREROUTING链（路由前规则）
        POSTROUTING链（路由后规则）
        
    3) 表对应的链规则
        nat表:PREROUTING链 OUTPUT链 INPUT链（入站规则）
        mangle表:PREROUTING链 POSTROUTING链 INPUT链 OUTPUT链 FORWARD链
        raw表:PREROUTING链 POSTROUTING链 OUTPUT链
        filter表:INPUT链 OUTPUT链 FORWARD链
          //顺序比对,匹配即停止(log除外),无匹配按照默认策略
          
    4) 规则链之间的顺序
        入站: PREROUTING -> INPUT
        出站: OUTPUT -> POSTROUTING
        转发: PREROUTING -> FORWARD -> POSTROUTING
        
iptabels语法格式
    [root@proxy ~]# iptables  [-t 表名]  选项  [链名]  [条件]  [-j 目标操作]
    [root@proxy ~]# iptables  -t  filter  -I  INPUT -p  icmp  -j  REJECT
    [root@proxy ~]# iptables -t filter -I  INPUT   -p  icmp  -j  ACCEPT
    [root@proxy ~]# iptables  -I  INPUT  -p  icmp  -j  REJECT
    //注意事项与规律：
    //可以不指定表，默认为filter表
    //可以不指定链，默认为对应表的所有链
    //如果没有找到匹配条件，则执行防火墙默认规则
    //选项/链名/目标操作用大写字母，其余都小写
    ########################################################################
    //目标操作：
    // ACCEPT：允许通过/放行
    // DROP：直接丢弃，不给出任何回应
    // REJECT：拒绝通过，必要时会给出提示
    // LOG：记录日志，然后传给下一条规则
    
iptables命令的常用选项
    添加规则    
    -A  添加一条规则至链的末尾               #add       
    -I  添加一条规则至链的行首               #insert
    
    查看规则
    -L  查看iptables所有规则                #list    // 默认是filter表 -t 表名更改
    -n  以数字形式显示端口,地址信息           #number  // n需要在L前  -nL
    --line-numbers 加行号
    
    删除规则
    -D  删除链内指定序号（或内容）的一条规则     #delete
    -F  清除所有规则                         #flush          //命令行只能临时清楚 永久生效/etc/sysconfig/iptables
                                               //iptables-save > /etc/sysconfig/iptables 
    
    默认规则
    -P  为指定的链设置默认规则                 #print
 
 基本的目标操作
    ACCEPT(接受):允许通过
    DROP(放弃):直接丢弃,不给予回应
    REJECT（拒绝）:拒绝通过,必要时给予回应
    LOG(日志):记录日志
 
 创建规则的案例
    [root@proxy ~]# iptables  -t  filter  -A  INPUT  -p tcp  -j  ACCEPT
        //追加规则至filter表中的INPUT链的末尾，允许任何人使用TCP协议访问本机  
        //-p protocol  protocol: by number or name eg, tcp
    [root@proxy ~]# iptables  -I  INPUT  -p  udp  -j  ACCEPT
        //插入规则至filter表中的INPUT链的开头，允许任何人使用UDP协议访问本机
        //-j  --jump	-j target for rule  目标操作 目标规则
    [root@proxy ~]# iptables  -I  INPUT 2  -p  icmp  -j  ACCEPT
        //插入规则至filter表中的INPUT链的第2行，允许任何人使用ICMP协议访问本机
        // -s source 源地址 
        //--dport 22 destionation-port 目标端口或端口范围指定
        
 查看iptables防火墙规则 
    [root@proxy ~]# iptables  -nL  INPUT                    //仅查看INPUT链的规则
    target     prot opt source               destination
    ACCEPT     udp  --  0.0.0.0/0            0.0.0.0/0
    ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0
    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0
    [root@proxy ~]# iptables  -L  INPUT  --line-numbers        //查看规则，显示行号
    num  target     prot opt source         destination
    1    ACCEPT     udp   --  anywhere     anywhere
    2    ACCEPT     icmp --   anywhere     anywhere
    3    ACCEPT     tcp  --   anywhere     anywhere
    
 删除规则，清空所有规则
    [root@proxy ~]# iptables  -D  INPUT  3
    //删除filter表中INPUT链的第3条规则
    [root@proxy ~]# iptables  -nL  INPUT                //查看规则，确认是否删除
    [root@proxy ~]# iptables  -F
    //清空filter表中所有链的防火墙规则
    [root@proxy ~]# iptables  -t  nat  -F
    //清空nat表中所有链的防火墙规则
    [root@proxy ~]# iptables  -t  mangle  -F
    //清空mangle表中所有链的防火墙规则
    [root@proxy ~]# iptables  -t  raw  -F
    //清空raw表中所有链的防火墙规则
    
 设置防火墙默认规则
    [root@proxy ~]# iptables  -t  filter  -P  INPUT  DROP
    [root@proxy ~]# iptables  -nL
    Chain INPUT (policy DROP)
    … …
    
filter过滤和转发控制
 根据防火墙保护的对象不同，防火墙可以分为主机型防火墙与网络型防火墙
    a主机型防火墙，主要保护的是服务器本机（过滤威胁本机的数据包）
    b网络防火墙，主要保护的是防火墙后面的其他服务器，如web服务器、FTP服务器等
     网络防火墙开启内核IP转发（主机路由功能）
        //sysctl -a | grep ip_forward 
        //echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf
        //echo 1 >/proc/sys/net/ipv4/ip_forward
    
 基本匹配条件(!为取反条件)
    通用匹配  
        协议匹配      -p 协议名                       //protocol
        地址匹配      -s 源地址 -d 目标地址            //source destination
        接口匹配      -i 收数据网卡 -o 发数据网卡       //input output 
        
    隐含匹配
        端口匹配      --sport   --dport              //source|destination + port
        ICMP类型匹配  --icmp-type                    //ICMP类型
        ICMP是（Internet Control Message Protocol）Internet控制报文协议
        它是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息
        
主机型防火墙案例
    [root@proxy ~]# iptables -I INPUT -p tcp --dport 80 -j REJECT
    [root@proxy ~]# iptables -I INPUT -s 192.168.2.100 -j REJECT
    [root@proxy ~]# iptables -I INPUT -d 192.168.2.5 -p tcp --dport 80 -j REJECT
    [root@proxy ~]# iptables -I INPUT -i eth0 -p tcp --dport 80 -j REJECT
    [root@proxy ~]# iptables  -A  INPUT  -s 192.168.4.100  -j  DROP
    //丢弃192.168.4.100发给本机的所有数据包
    [root@proxy ~]# iptables  -A  INPUT -s  192.168.2.0/24  -j  DROP
    //丢弃192.168.2.0/24网络中所有主机发送给本机的所有数据包
    [root@proxy ~]# iptables -A  INPUT -s  114.212.33.12  -p tcp --dport 22 -j  REJECT
    //拒绝114.212.33.12使用tcp协议远程连接本机ssh（22端口）
    
网络型防火墙案例 
  试验环境
    主机client  IP 192.168.4.100 gateway 192.168.4.5
    主机proxy   IP 192.168.4.5 & 192.168.2.5          //防火墙设置 需要开启路由转发规则
    主机web1    IP 192.168.2.100 gateway 192.168.2.5
        
  设置防火墙转发规则
    [root@client ~]# curl http://192.168.2.100                    //成功
    [root@proxy ~]# iptables -I FORWARD -s 192.168.4.100 -p tcp --dport 80 -j DROP
    [root@client ~]# curl http://192.168.2.100                    //失败
    
禁ping的相关策略
    
  直接禁ping的问题
    [root@proxy ~]# iptables -I INPUT -p icmp -j DROP
        //设置完上面的规则后，其他主机确实无法ping本机，但本机也无法ping其他主机
        //当本机ping其他主机，其他主机回应也是使用icmp，对方的回应被丢弃
  
  禁止其他主机ping本机，允许本机ping其他主机
       需要确认  IN/OUT put 链  与 链下的默认规则 决定 答复 与请求的规则
    [root@proxy ~]# iptables  -A  INPUT  -p icmp --icmp-type echo-request  -j  DROP
                // 等同于iptables  -A  OUTPUT -p icmp  --icmp-type echo-reply -j DROP
                //仅禁止入站的ping请求，不拒绝入站的ping回应包
    [root@proxy ~]# iptables  -A  INPUT  -p icmp ! --icmp-type echo-request  -j  ACCEPT //取反的栗子
    
    当INPUT链的默认规则为Drop
    [root@proxy ~]# iptables -t filter -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
    
  关于ICMP的类型，可以参考help帮助
    [root@proxy ~]# iptables -p icmp --help
    --icmp-type echo-request 请求  reply 答复
    
iptables扩展功能
  在使用时需要使用-m参数来启动这些扩展功能，语法如下：
  iptables 选项 链名称 -m 扩展模块 --具体扩展条件 -j 动作
  
  常用的扩展条件类型
    MAC地址类型 -m mac --mac-source Mac地址
    
    多端口匹配  -m multiport --sport 源端口列表
              -m multiport --dport 目标端口列表
                
    IP范围匹配  -m iprange --src-range IP1 - IPx
                -m iprange --dst-range IP1 - IPx
                
  根据MAC地址过滤
    [root@client ~]# ip link show eth0                    //查看client的MAC地址  本机可以用arp -a查看mac
    eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP mode DEFAULT qlen 1000
    link/ether 52:54:00:00:00:0b brd ff:ff:ff:ff:ff:ff
    [root@proxy ~]# iptables  -A  INPUT  -p tcp --dport 22 -m mac --mac-source  52:54:00:00:00:0b  -j  DROP
            //拒绝52:54:00:00:00:0b这台主机远程本机
  
  一次需要过滤或放行很多端口时会比较方便
    [root@proxy ~]# iptables  -A  INPUT  -p tcp -m  multiport --dports  20:22,25,80,110,143,16501:16800  -j  ACCEPT
            //一次性开启20,21,22,25,80,110,143,16501到16800所有的端口
    
  根据IP地址范围设置规则
    [root@proxy ~]# iptables  -A  INPUT  -p tcp  --dport  22 -m  iprange  --src-range  192.168.4.10-192.168.4.20 -j  ACCEPT
            //这里也可以限制多个目标IP的范围，参数是--dst-range,用法与--src-range一致
    [root@proxy ~]# iptables -A INPUT -p tcp --dport 22  -s 192.168.4.0/24  -j  DROP     
            //禁止从 192.168.4.0/24 网段其他的主机登录 
            
配置SNAT实现共享上网          //snat  source network address tanslation 仅用于nat表的postrouting
  案例要求
    a)搭建内外网案例环境
    b)配置SNAT策略实现共享上网访问
      
  试验环境
    主机client  IP 192.168.4.100 gateway 192.168.4.5
    主机proxy   IP 192.168.4.5 & 192.168.2.5          //防火墙设置 需要开启路由转发规则
    主机web1    IP 192.168.2.100 gateway 192.168.2.5
      //实现的效果是，client可以访问web服务器，但要伪装为192.168.2.5后再访问web服务器
    
  proxy主机开启了路由转发功能
    [root@proxy ~]# echo 1 > /proc/sys/net/ipv4/ip_forward            //开启路由转发
    
  实现SNAT地址转换
    [root@proxy ~]# iptables  -t  nat  -A POSTROUTING \
    > -s  192.168.4.0/24 -p tcp --dport 80  -j SNAT  --to-source 192.168.2.5
    
  登陆web主机查看日志
    [root@web ~]# tail  /var/log/httpd/access_log
    .. ..
    192.168.2.5 - - [12/Aug/2018:17:57:10 +0800] 
    "GET / HTTP/1.1" 200 27 "-" "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)"
    
  扩展:对于proxy外网IP不固定的情况可以执行下面的地址伪装，动态伪装IP
    [root@proxy ~]# iptables  -t  nat  -A POSTROUTING \
    > -s  192.168.4.0/24 -p tcp --dport 80 -j MASQUERADE
    
  所有iptables规则都是临时规则，如果需要永久保留规则需要执行如下命令
[root@proxy ~]# service iptables save
